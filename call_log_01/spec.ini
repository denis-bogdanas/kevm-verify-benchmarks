;root eDSL rule from all other eDSL rules extend
[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
callLog: _ => _
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(#CALLEE_ID) SetItem(1) _:Set
accounts:
;contract
contract_bal: CONTRACT_BAL
contract_storage: _
contract_origstorage: _
contract_nonce: _

callee_bal: CALLEE_BAL
callee_storage: _
callee_origstorage: _
callee_nonce: _
callee_code: _

;origin
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
    andBool #rangeUInt(256, CALLEE_BAL)
ensures:
attribute:

[execute]
k: (#execute => #halt) ~> _
output: _ => _
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("execute", #bool(CONDITION_SB),
            #uint256(GAS_LIMIT_SB), #uint256(VALUE_SB),
            #bytes(#buf(DATA_LEN,DATA)), #address(DESTINATION))
callValue: 0
wordStack: .WordStack => _
localMem: .Map => _
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _
coinbase: _ => _
+requires:
    andBool #range(0 <= CD < 1023)
    andBool #rangeAddress(MSG_SENDER)
    andBool #rangeAddress(DESTINATION)
    andBool #rangeUInt(8, CONDITION_SB)
    andBool #rangeUInt(256, GAS_LIMIT_SB)
    andBool #rangeUInt(256, VALUE_SB)
    andBool #rangeUInt(256, DATA_LEN)
    andBool DATA_LEN <Int 2 ^Int 16


[execute-failure]
statusCode: _ => EVMC_REVERT
+requires:
    andBool CONDITION_SB ==Int 0

[execute-success-call-1]
statusCode: _ => EVMC_SUCCESS
callLog: .List => ListItem ( 0 390 GAS_LIMIT_SB DESTINATION VALUE_SB ARGSTART_C ARGWIDTH_C 0 0 LM_C ) .List
+requires:
    andBool CONDITION_SB ==Int 1
    andBool #callSuccess(0, DESTINATION)
+ensures:
    andBool selectRange(LM_C, ARGSTART_C, ARGWIDTH_C) ==K #buf(DATA_LEN,DATA)

[execute-success-call-0]
statusCode: _ => EVMC_REVERT
callLog: .List => ListItem ( 0 390 GAS_LIMIT_SB DESTINATION VALUE_SB ARGSTART_C ARGWIDTH_C 0 0 LM_C ) .List
+requires:
    andBool CONDITION_SB ==Int 1
    andBool #callFailure(0, DESTINATION)
+ensures:
    andBool selectRange(LM_C, ARGSTART_C, ARGWIDTH_C) ==K #buf(DATA_LEN,DATA)

[pgm]
compiler: "Solidity"

;call00.sol
contract_code: "0x608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806361fa2d7114610046575b600080fd5b34801561005257600080fd5b5061014c600480360360a081101561006957600080fd5b810190808035151590602001909291908035906020019092919080359060200190929190803590602001906401000000008111156100a657600080fd5b8201836020820111156100b857600080fd5b803590602001918460018302840111640100000000831117156100da57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610166565b604051808215151515815260200191505060405180910390f35b600085151561017457600080fd5b600080905060008085516020870188878bf1905080151561019457600080fd5b509594505050505056fea165627a7a723058203c688281654473319fa6fb989012e102fc7d97a6acee99a2c96904b16f799c4d0029"