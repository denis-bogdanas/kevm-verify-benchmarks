;root eDSL rule from all other eDSL rules extend
[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(1) _:Set
accounts:
;contract
contract_bal: CONTRACT_BAL
contract_storage: _
contract_origstorage: _
contract_nonce: _
;origin
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
ensures:
attribute:


;eDSL rule for external contract function called foo
[get5]
k: (#execute => #halt) ~> _
statusCode: _ => _
output: _ => _
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("get5", .TypedArgs)
callValue: _
wordStack: .WordStack => _
localMem: .IMap => _
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _ => _
coinbase: _ => _
+requires:  andBool #range(0 <= CD < 1023)
            andBool #rangeAddress(MSG_SENDER)


[pgm]
compiler: "Solidity"

contract_code: "0x608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311694354146044575b600080fd5b348015604f57600080fd5b506056606c565b6040518082815260200191505060405180910390f35b600060059050905600a165627a7a72305820b820ac1350c6506ac289551a7de567ba61d6f9924d281778dfc7ae281480ea1a0029"