[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(1) _:Set
accounts:
callLog: .List
;contract
contract_bal: CONTRACT_BAL
contract_storage: M
contract_origstorage: _
contract_nonce: _
;callee
callee_bal: CALLEE_BAL
callee_storage: _
callee_origstorage: _
callee_nonce: _
callee_code: _
;origin
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
ensures:
attribute:

[get]
k: (#execute => #halt) ~> _
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("get",
                            #bool(CONDITION_SB),
                            #uint256(GAS_LIMIT_SB), #uint256(VALUE_SB),
                            #bytes(#buf(DATA_LEN,DATA)), #address(DESTINATION),
                            #bytes32(HASH))
callValue: 0
wordStack: .WordStack => _
localMem: .Map => _
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _
coinbase: _ => _
+requires:
            andBool #range(0 <= CD < 1024)
            andBool #rangeAddress(MSG_SENDER)
            andBool #rangeBytes(32, HASH)

            andBool #rangeUInt(256, DATA_LEN)
            andBool DATA_LEN <Int 2 ^Int 16

            andBool ECREC_DATA0 ==K #encodeArgs( #bytes32(HASH), #uint8(0), #bytes32(0), #bytes32(0) )
            andBool ECREC_DATA1 ==K #encodeArgs( #bytes32(HASH), #uint8(1), #bytes32(1), #bytes32(1) )


[get-success]
statusCode: _ => EVMC_SUCCESS
callLog: .List => ListItem ( 0 {CALL_PC} GAS_LIMIT_SB DESTINATION VALUE_SB ARGSTART_C ARGWIDTH_C 0 0 LM_C ) .List
output: _ => _
+requires:
    andBool RECOVERED0 ==Int #symEcrec( ECREC_DATA0 )
    andBool RECOVERED1 ==Int #symEcrec( ECREC_DATA1 )
    andBool notBool #ecrecEmpty( ECREC_DATA0 )
    andBool notBool #ecrecEmpty( ECREC_DATA1 )
    andBool #callSuccess(0, DESTINATION)
+ensures:
    andBool selectRange(LM_C, ARGSTART_C, ARGWIDTH_C) ==K #buf(DATA_LEN,DATA)

[get-failure-0]
statusCode: _ => EVMC_REVERT
output: _ => _
+requires:
    andBool #ecrecEmpty( ECREC_DATA0 )


[get-failure-1]
statusCode: _ => EVMC_REVERT
output: _ => _
+requires:
    andBool notBool #ecrecEmpty( ECREC_DATA0 )
    andBool #ecrecEmpty( ECREC_DATA1 )

[pgm]
compiler: "Solidity"

nonce_slot = 0

threshold = 2

call_pc: 564

call_log_pcset: ( SetItem( {CALL_PC} ) )

contract_code: "0x608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634616523714610046575b600080fd5b34801561005257600080fd5b50610156600480360360c081101561006957600080fd5b810190808035151590602001909291908035906020019092919080359060200190929190803590602001906401000000008111156100a657600080fd5b8201836020820111156100b857600080fd5b803590602001918460018302840111640100000000831117156100da57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610158565b005b60008090505b600281101561022157600060018383846001028560010260405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156101cc573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1611151561021357600080fd5b50808060010191505061015e565b50600080905060008085516020870188878bf1905080151561024257600080fd5b5050505050505056fea165627a7a723058209dc2968ce32dfd3060564f6c7c430311c149004344fe5a02681b9c6b4a8876ee0029"