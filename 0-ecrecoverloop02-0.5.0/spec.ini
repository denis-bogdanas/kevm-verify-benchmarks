[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
callCount: _
activeAccounts: SetItem(#CONTRACT_ID) SetItem(#CALLEE_ID) SetItem(1) _:Set
accounts:
contract_bal: CONTRACT_BAL
contract_storage: _
contract_origstorage: _
contract_nonce: _
callee_bal: CALLEE_BAL
callee_storage: _
callee_origstorage: _
callee_nonce: _
callee_code: _
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
    andBool #rangeUInt(256, CALLEE_BAL)
ensures:
attribute:

[fn]
k: (#execute => #halt) ~> _
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callValue: 0
wordStack: .WordStack => _
localMem: .Map => _
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _
coinbase: _
+requires:  andBool #range(0 <= CD < 1024)
            andBool #rangeAddress(MSG_SENDER)

[fn-execute]
output: _ => .WordStack
callData:  #abiCallData2("execute(bytes32,bytes,uint8[2],bytes32[2],bytes32[2])",
                            #bytes32(HASH), #bytes(#buf(DATA_LEN,DATA)),
                            #uint8(SIGV0), #uint8(SIGV1),
                            #bytes32(SIGR0), #bytes32(SIGR1),
                            #bytes32(SIGS0), #bytes32(SIGS1))
+requires:  andBool #rangeUInt(256, HASH)
            andBool #rangeUInt(8, SIGV0)
            andBool #rangeUInt(8, SIGV1)
            andBool #rangeBytes(32, SIGR0)
            andBool #rangeBytes(32, SIGR1)
            andBool #rangeBytes(32, SIGS0)
            andBool #rangeBytes(32, SIGS1)
            andBool #range(0 <= DATA_LEN < 2 ^Int 16)
            andBool ECREC_DATA0 ==K #encodeArgs( #bytes32(HASH), #uint8(SIGV0), #bytes32(SIGR0), #bytes32(SIGS0) )
            andBool ECREC_DATA1 ==K #encodeArgs( #bytes32(HASH), #uint8(SIGV1), #bytes32(SIGR1), #bytes32(SIGS1) )

[fn-execute-sigs-valid]
statusCode: _ => EVMC_SUCCESS
+requires:  andBool RECOVERED0 ==Int #symEcrec( ECREC_DATA0 )
            andBool RECOVERED1 ==Int #symEcrec( ECREC_DATA1 )
            andBool notBool #ecrecEmpty( ECREC_DATA0 )
            andBool notBool #ecrecEmpty( ECREC_DATA1 )

[fn-execute-sig0-invalid]
statusCode: _ => EVMC_REVERT
+requires:  andBool #ecrecEmpty( ECREC_DATA0 )

[fn-execute-sig1-invalid]
statusCode: _ => EVMC_REVERT
+requires:  andBool notBool #ecrecEmpty( ECREC_DATA0 )
            andBool #ecrecEmpty( ECREC_DATA1 )

[pgm]
compiler: "Solidity"
contract_code: "0x608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633543d4b214610046575b600080fd5b34801561005257600080fd5b506101da600480360361010081101561006a57600080fd5b81019080803590602001909291908035906020019064010000000081111561009157600080fd5b8201836020820111156100a357600080fd5b803590602001918460018302840111640100000000831117156100c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506101dc565b005b60008090505b60028110156102d557600060018786846002811015156101fe57fe5b6020020151868560028110151561021157fe5b6020020151868660028110151561022457fe5b602002015160405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610280573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161115156102c757600080fd5b5080806001019150506101e2565b50505050505056fea165627a7a723058200e559ecf0b4ed3978069fd9e401adb4043ef711a33a5926f0e081d7bcdf08bb80029"
call_log_pcset: .Set