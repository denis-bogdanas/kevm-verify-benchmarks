;root eDSL rule from all other eDSL rules extend
[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(1) _:Set
accounts:
;contract
contract_bal: CONTRACT_BAL
contract_storage: M
contract_origstorage: _
contract_nonce: _
;origin
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
ensures:
attribute:


;eDSL rule for external contract function called getkeccak
[getkeccak]
k: (#execute => #halt) ~> _
statusCode: _ => EVMC_SUCCESS
output: _ => #encodeArgs(#bytes32(HASH))
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("getkeccak", .TypedArgs )
callValue: 0
wordStack: .WordStack => _
localMem: .Map => _
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _
coinbase: _ => _
+requires:  andBool #range(0 <= CD < 1024)
            andBool #rangeAddress(MSG_SENDER)
            andBool select(M, #hashedLocation({COMPILER}, {NONCE_SLOT}, .IntList)) ==Int NONCE
            andBool #rangeUInt(256, NONCE)
            andBool HASH ==Int keccak(25 : 1 : #encodeArgs(#uint256(NONCE)))

[pgm]
compiler: "Solidity"

nonce_slot = 0

contract_code: "0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806347f13aa514610051578063affed0e014610084575b600080fd5b34801561005d57600080fd5b506100666100af565b60405180826000191660001916815260200191505060405180910390f35b34801561009057600080fd5b50610099610218565b6040518082815260200191505060405180910390f35b600060197f01000000000000000000000000000000000000000000000000000000000000000260017f01000000000000000000000000000000000000000000000000000000000000000260005460405160200180847effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260010182815260200193505050506040516020818303038152906040526040518082805190602001908083835b6020831015156101e657805182526020820191506020810190506020830392506101c1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905090565b600054815600a165627a7a72305820379f6ccd7d82b487d25adbd8dfb94cc0db2619b10fd711a1852b60c19df454550029"