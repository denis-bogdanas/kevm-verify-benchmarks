rm -rf ./generated
mkdir -p generated
cp ../resources/verification2.k ../resources/abstract-semantics.k ../resources/abstract-semantics-segmented-gas.k ../resources/evm-symbolic.k ../resources/evm-data-map-symbolic.k ../resources/ecrec-symbolic.k ../resources/edsl-static-array.k generated
mv generated/verification2.k generated/verification.k
bash /home/sbugrara/kevm-verify-benchmarks/resources/compile5
pandoc --from markdown --to "/home/sbugrara/kevm-verify-benchmarks/.build/pandoc-tangle/tangle.lua" --metadata=code:".k" /home/sbugrara/kevm-verify-benchmarks/resources/lemmas.md > generated/lemmas.k
python3 /home/sbugrara/kevm-verify-benchmarks/resources/gen-spec.py ../resources/module-tmpl.k ../resources/spec-tmpl.k ./spec.ini fn-execute fn-execute > generated/fn-execute-spec.k
java -Dfile.encoding=UTF-8 -Djava.awt.headless=true -Xms1024m -Xmx8192m -Xss32m -XX:+TieredCompilation  -ea -cp "/home/sbugrara/kevm-verify-benchmarks/.build/k/k-distribution/target/release/k/lib/java/*" org.kframework.main.Main -kprove -v --debug -d /home/sbugrara/kevm-verify-benchmarks/.build/evm-semantics/.build/java -m VERIFICATION --z3-impl-timeout 500 --deterministic-functions --no-exc-wrap --cache-func-optimized --no-alpha-renaming --format-failures --boundary-cells k,pc --log-cells k,output,statusCode,localMem,pc,gas,wordStack,callData,accounts,memoryUsed,#pc,#result,#target --smt-prelude ../resources/evm.smt2  generated/fn-execute-spec.k
Parse command line options                                   =  0.000s
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/././generated/fn-execute-spec.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/generated/fn-execute-spec.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/generated/abstract-semantics.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/generated/abstract-semantics-segmented-gas.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/generated/evm-symbolic.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/.build/evm-semantics/.build/java/edsl.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/.build/evm-semantics/.build/java/evm.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/.build/evm-semantics/.build/java/data.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/.build/evm-semantics/.build/java/krypto.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/.build/evm-semantics/.build/java/network.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/generated/ecrec-symbolic.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/generated/verification.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/generated/evm-data-map-symbolic.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/generated/lemmas.k)
Importing: Source(/home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/generated/edsl-static-array.k)
Parse spec modules [2/1222 rules]                            =  0.014s

Parsing finished:   49.317 s

Initialization finished
==================================
Stats for each phase, time, used memory, implicit main GC time percentage:
Total                 :   50.188 s,	  558 MB, gc:  0.982 %
  Parsing             :   49.317 s,	  363 MB, gc:  1.000 %
  Init                :    0.871 s,	  558 MB, gc:  0.000 %

Init+Execution time:       0.871 s
  query build time                 :    0.018 s,      #         12
  Z3 Function rule implication time:    0.124 s,      #         10
      sat           :       10
    query build failures: 2

  Time and top-level event counts:
  resolveFunctionAndAnywhere time  :    0.320 s,      #        589
    evaluateFunction time            :    0.312 s,      #         88
      builtin evaluation               :           ,      #         15
      function rule                    :           ,      #         29
      no rule applicable               :           ,      #         40
      no function rules                :           ,      #          4
    applyAnywhereRules time          :    0.001 s,      #        284
      no anywhere rules                :           ,      #        284
    remaining time & # cached        :    0.007 s,      #        217
  impliesSMT time                  :    0.147 s,      #         12

  Recursive event counts:
  resolveFunctionAndAnywhere time  :           ,      #       5092
    evaluateFunction time            :           ,      #       3274
      builtin evaluation               :           ,      #       1991
      function rule                    :           ,      #       1096
      no rule applicable               :           ,      #        139
      no function rules                :           ,      #          2
    applyAnywhereRules time          :           ,      #        489
      no anywhere rules                :           ,      #        489
    # cached                         :           ,      #       1329
==================================


Target term
=====================

<generatedTop>(<k>(#KSequence(#halt_EVM(.KList), _650_2925:K)),, <exit-code>(Int(#"1")),, <mode>(NORMAL(.KList)),, <schedule>(BYZANTIUM_EVM(.KList)),, <analysis>(.Map),, <ethereum>(<evm>(<output>(_652_2927:WordStack),, <statusCode>(EVMC_REVERT_NETWORK(.KList)),, <callStack>(_654_2929:List),, <interimStates>(_655_2930:List),, <touchedAccounts>(_657_2932:Set),, <callState>(<program>(Int(#"0") |-> PUSH(Int(#"1"),, Int(#"128")) Int(#"2") |-> PUSH(Int(#"1"),, Int(#"64")) Int(#"4") |-> MSTORE_EVM(.KList) Int(#"5") |-> PUSH(Int(#"1"),, Int(#"4")) Int(#"7") |-> CALLDATASIZE_EVM(.KList) Int(#"135") |-> UNDEFINED(_)_EVM(Int(#"195")) Int(#"8") |-> LT_EVM(.KList) Int(#"136") |-> SWAP(Int(#"6")) Int(#"9") |-> PUSH(Int(#"1"),, Int(#"63")) Int(#"137") |-> ISZERO_EVM(.KList) Int(#"138") |-> SUB_EVM(.KList) Int(#"11") |-> JUMPI_EVM(.KList) Int(#"139") |-> PUSH(Int(#"23"),, Int(#"10987100118487637346974392327776578828054422748554854400")) Int(#"12") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"14") |-> CALLDATALOAD_EVM(.KList) Int(#"15") |-> PUSH(Int(#"29"),, Int(#"26959946667150639794667015087019630673637144422540572481103610249216")) Int(#"45") |-> SWAP(Int(#"1")) Int(#"46") |-> DIV_EVM(.KList) Int(#"47") |-> PUSH(Int(#"4"),, Int(#"4294967295")) Int(#"52") |-> AND_EVM(.KList) Int(#"53") |-> DUP(Int(#"1")) Int(#"54") |-> PUSH(Int(#"4"),, Int(#"1631983956")) Int(#"59") |-> EQ_EVM(.KList) Int(#"60") |-> PUSH(Int(#"1"),, Int(#"68")) Int(#"62") |-> JUMPI_EVM(.KList) Int(#"63") |-> JUMPDEST_EVM(.KList) Int(#"64") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"66") |-> DUP(Int(#"1")) Int(#"67") |-> REVERT_EVM(.KList) Int(#"68") |-> JUMPDEST_EVM(.KList) Int(#"69") |-> CALLVALUE_EVM(.KList) Int(#"70") |-> DUP(Int(#"1")) Int(#"71") |-> ISZERO_EVM(.KList) Int(#"72") |-> PUSH(Int(#"1"),, Int(#"79")) Int(#"74") |-> JUMPI_EVM(.KList) Int(#"75") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"77") |-> DUP(Int(#"1")) Int(#"78") |-> REVERT_EVM(.KList) Int(#"79") |-> JUMPDEST_EVM(.KList) Int(#"80") |-> POP_EVM(.KList) Int(#"81") |-> PUSH(Int(#"1"),, Int(#"86")) Int(#"83") |-> PUSH(Int(#"1"),, Int(#"88")) Int(#"85") |-> JUMP_EVM(.KList) Int(#"86") |-> JUMPDEST_EVM(.KList) Int(#"87") |-> STOP_EVM(.KList) Int(#"88") |-> JUMPDEST_EVM(.KList) Int(#"89") |-> PUSH(Int(#"1"),, Int(#"5")) Int(#"91") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"93") |-> DUP(Int(#"2")) Int(#"94") |-> SWAP(Int(#"1")) Int(#"95") |-> SSTORE_EVM(.KList) Int(#"96") |-> POP_EVM(.KList) Int(#"97") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"99") |-> ISZERO_EVM(.KList) Int(#"100") |-> ISZERO_EVM(.KList) Int(#"101") |-> PUSH(Int(#"1"),, Int(#"108")) Int(#"103") |-> JUMPI_EVM(.KList) Int(#"104") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"106") |-> DUP(Int(#"1")) Int(#"107") |-> REVERT_EVM(.KList) Int(#"108") |-> JUMPDEST_EVM(.KList) Int(#"109") |-> JUMP_EVM(.KList) Int(#"110") |-> INVALID_EVM(.KList) Int(#"111") |-> LOG(Int(#"1")) Int(#"112") |-> PUSH(Int(#"6"),, Int(#"108278179835992")) Int(#"119") |-> SHA3_EVM(.KList) Int(#"120") |-> MUL_EVM(.KList) Int(#"121") |-> UNDEFINED(_)_EVM(Int(#"221")) Int(#"122") |-> PUSH(Int(#"12"),, Int(#"14205052191959370379608719523"))   ),, <programBytes>(_:_WS(Int(#"96"),, _:_WS(Int(#"128"),, _:_WS(Int(#"96"),, _:_WS(Int(#"64"),, _:_WS(Int(#"82"),, _:_WS(Int(#"96"),, _:_WS(Int(#"4"),, _:_WS(Int(#"54"),, _:_WS(Int(#"16"),, _:_WS(Int(#"96"),, _:_WS(Int(#"63"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"53"),, _:_WS(Int(#"124"),, _:_WS(Int(#"1"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"144"),, _:_WS(Int(#"4"),, _:_WS(Int(#"99"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"22"),, _:_WS(Int(#"128"),, _:_WS(Int(#"99"),, _:_WS(Int(#"97"),, _:_WS(Int(#"70"),, _:_WS(Int(#"25"),, _:_WS(Int(#"84"),, _:_WS(Int(#"20"),, _:_WS(Int(#"96"),, _:_WS(Int(#"68"),, _:_WS(Int(#"87"),, _:_WS(Int(#"91"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"52"),, _:_WS(Int(#"128"),, _:_WS(Int(#"21"),, _:_WS(Int(#"96"),, _:_WS(Int(#"79"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"80"),, _:_WS(Int(#"96"),, _:_WS(Int(#"86"),, _:_WS(Int(#"96"),, _:_WS(Int(#"88"),, _:_WS(Int(#"86"),, _:_WS(Int(#"91"),, _:_WS(Int(#"0"),, _:_WS(Int(#"91"),, _:_WS(Int(#"96"),, _:_WS(Int(#"5"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"129"),, _:_WS(Int(#"144"),, _:_WS(Int(#"85"),, _:_WS(Int(#"80"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"21"),, _:_WS(Int(#"21"),, _:_WS(Int(#"96"),, _:_WS(Int(#"108"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"86"),, _:_WS(Int(#"254"),, _:_WS(Int(#"161"),, _:_WS(Int(#"101"),, _:_WS(Int(#"98"),, _:_WS(Int(#"122"),, _:_WS(Int(#"122"),, _:_WS(Int(#"114"),, _:_WS(Int(#"48"),, _:_WS(Int(#"88"),, _:_WS(Int(#"32"),, _:_WS(Int(#"2"),, _:_WS(Int(#"221"),, _:_WS(Int(#"107"),, _:_WS(Int(#"45"),, _:_WS(Int(#"230"),, _:_WS(Int(#"36"),, _:_WS(Int(#"206"),, _:_WS(Int(#"86"),, _:_WS(Int(#"241"),, _:_WS(Int(#"24"),, _:_WS(Int(#"32"),, _:_WS(Int(#"181"),, _:_WS(Int(#"184"),, _:_WS(Int(#"0"),, _:_WS(Int(#"163"),, _:_WS(Int(#"195"),, _:_WS(Int(#"149"),, _:_WS(Int(#"21"),, _:_WS(Int(#"3"),, _:_WS(Int(#"118"),, _:_WS(Int(#"114"),, _:_WS(Int(#"181"),, _:_WS(Int(#"238"),, _:_WS(Int(#"247"),, _:_WS(Int(#"109"),, _:_WS(Int(#"110"),, _:_WS(Int(#"134"),, _:_WS(Int(#"142"),, _:_WS(Int(#"94"),, _:_WS(Int(#"120"),, _:_WS(Int(#"59"),, _:_WS(Int(#"101"),, _:_WS(Int(#"0"),, _:_WS(Int(#"41"),, .WordStack_EVM-DATA(.KList)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),, <id>(#CONTRACT_ID_VERIFICATION(.KList)),, <caller>(MSG_SENDER_2917:Int),, <callData>(_:_WS(Int(#"97"),, _:_WS(Int(#"70"),, _:_WS(Int(#"25"),, _:_WS(Int(#"84"),, .WordStack_EVM-DATA(.KList)))))),, <callValue>(Int(#"0")),, <wordStack>(_658_2933:WordStack),, <localMem>(_659_2934:Map),, <pc>(_660_2935:Int),, <gas>(_661_2936:Int),, <memoryUsed>(_662_2937:Int),, <previousGas>(_664_2939:Int),, <static>(Bool(#"false")),, <callDepth>(CD_2923:Int)),, <substate>(<selfDestruct>(_665_2940:Set),, <log>(_666_2941:List),, <refund>(_668_2943:Int)),, <gasPrice>(_669_2944:Int),, <origin>(_670_2945:Int),, <previousHash>(_671_2946:Int),, <ommersHash>(_672_2947:Int),, <coinbase>(_674_2949:Int),, <stateRoot>(_675_2950:Int),, <transactionsRoot>(_676_2951:Int),, <receiptsRoot>(_677_2952:Int),, <logsBloom>(_678_2953:WordStack),, <difficulty>(_679_2954:Int),, <number>(BLOCK_NUM_2921:Int),, <gasLimit>(_680_2955:Int),, <gasUsed>(_681_2956:Int),, <timestamp>(NOW_2924:Int),, <extraData>(_682_2957:WordStack),, <mixHash>(_683_2958:Int),, <blockNonce>(_684_2959:Int),, <ommerBlockHeaders>(_685_2960:JSON),, <blockhash>(BLOCK_HASHES_2922:List)),, <network>(<activeAccounts>(#CALLEE_ID_VERIFICATION(.KList) Int(#"1") #CONTRACT_ID_VERIFICATION(.KList)_686_2961:Set),, <accounts>(<acctID>(#CALLEE_ID_VERIFICATION(.KList)) |-> <account>(<acctID>(#CALLEE_ID_VERIFICATION(.KList)),, <balance>(CALLEE_BAL_2918:Int),, <code>(_690_2965:AccountCode),, <storage>(_691_2966:Map),, <origStorage>(_692_2967:Map),, <nonce>(_693_2968:Int)) <acctID>(Int(#"1")) |-> <account>(<acctID>(Int(#"1")),, <balance>(Int(#"0")),, <code>(.WordStack_EVM-DATA(.KList)),, <storage>(.Map),, <origStorage>(.Map),, <nonce>(Int(#"0"))) <acctID>(#CONTRACT_ID_VERIFICATION(.KList)) |-> <account>(<acctID>(#CONTRACT_ID_VERIFICATION(.KList)),, <balance>(CONTRACT_BAL_2972:Int),, <code>(_:_WS(Int(#"96"),, _:_WS(Int(#"128"),, _:_WS(Int(#"96"),, _:_WS(Int(#"64"),, _:_WS(Int(#"82"),, _:_WS(Int(#"96"),, _:_WS(Int(#"4"),, _:_WS(Int(#"54"),, _:_WS(Int(#"16"),, _:_WS(Int(#"96"),, _:_WS(Int(#"63"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"53"),, _:_WS(Int(#"124"),, _:_WS(Int(#"1"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"144"),, _:_WS(Int(#"4"),, _:_WS(Int(#"99"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"22"),, _:_WS(Int(#"128"),, _:_WS(Int(#"99"),, _:_WS(Int(#"97"),, _:_WS(Int(#"70"),, _:_WS(Int(#"25"),, _:_WS(Int(#"84"),, _:_WS(Int(#"20"),, _:_WS(Int(#"96"),, _:_WS(Int(#"68"),, _:_WS(Int(#"87"),, _:_WS(Int(#"91"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"52"),, _:_WS(Int(#"128"),, _:_WS(Int(#"21"),, _:_WS(Int(#"96"),, _:_WS(Int(#"79"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"80"),, _:_WS(Int(#"96"),, _:_WS(Int(#"86"),, _:_WS(Int(#"96"),, _:_WS(Int(#"88"),, _:_WS(Int(#"86"),, _:_WS(Int(#"91"),, _:_WS(Int(#"0"),, _:_WS(Int(#"91"),, _:_WS(Int(#"96"),, _:_WS(Int(#"5"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"129"),, _:_WS(Int(#"144"),, _:_WS(Int(#"85"),, _:_WS(Int(#"80"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"21"),, _:_WS(Int(#"21"),, _:_WS(Int(#"96"),, _:_WS(Int(#"108"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"86"),, _:_WS(Int(#"254"),, _:_WS(Int(#"161"),, _:_WS(Int(#"101"),, _:_WS(Int(#"98"),, _:_WS(Int(#"122"),, _:_WS(Int(#"122"),, _:_WS(Int(#"114"),, _:_WS(Int(#"48"),, _:_WS(Int(#"88"),, _:_WS(Int(#"32"),, _:_WS(Int(#"2"),, _:_WS(Int(#"221"),, _:_WS(Int(#"107"),, _:_WS(Int(#"45"),, _:_WS(Int(#"230"),, _:_WS(Int(#"36"),, _:_WS(Int(#"206"),, _:_WS(Int(#"86"),, _:_WS(Int(#"241"),, _:_WS(Int(#"24"),, _:_WS(Int(#"32"),, _:_WS(Int(#"181"),, _:_WS(Int(#"184"),, _:_WS(Int(#"0"),, _:_WS(Int(#"163"),, _:_WS(Int(#"195"),, _:_WS(Int(#"149"),, _:_WS(Int(#"21"),, _:_WS(Int(#"3"),, _:_WS(Int(#"118"),, _:_WS(Int(#"114"),, _:_WS(Int(#"181"),, _:_WS(Int(#"238"),, _:_WS(Int(#"247"),, _:_WS(Int(#"109"),, _:_WS(Int(#"110"),, _:_WS(Int(#"134"),, _:_WS(Int(#"142"),, _:_WS(Int(#"94"),, _:_WS(Int(#"120"),, _:_WS(Int(#"59"),, _:_WS(Int(#"101"),, _:_WS(Int(#"0"),, _:_WS(Int(#"41"),, .WordStack_EVM-DATA(.KList)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),, <storage>(_687_2962:Map),, <origStorage>(_688_2963:Map),, <nonce>(_689_2964:Int))   DotVar1_2920:Map),, <txOrder>(_694_2969:List),, <txPending>(_695_2970:List),, <messages>(_696_2971:Map))))
/\
ConjunctiveFormula(
)

Halt! Terminating branch.

==========================================
Failure final states:
==========================================

<generatedTop>(<k>(#KSequence(#halt_EVM(.KList), _650_2925:K)),, <exit-code>(Int(#"1")),, <mode>(NORMAL(.KList)),, <schedule>(BYZANTIUM_EVM(.KList)),, <analysis>(.Map),, <ethereum>(<evm>(<output>(.WordStack_EVM-DATA(.KList)),, <statusCode>(EVMC_REVERT_NETWORK(.KList)),, <callStack>(_654_2929:List),, <interimStates>(_655_2930:List),, <touchedAccounts>(_656_2931:Set),, <callState>(<program>(Int(#"0") |-> PUSH(Int(#"1"),, Int(#"128")) Int(#"2") |-> PUSH(Int(#"1"),, Int(#"64")) Int(#"4") |-> MSTORE_EVM(.KList) Int(#"5") |-> PUSH(Int(#"1"),, Int(#"4")) Int(#"7") |-> CALLDATASIZE_EVM(.KList) Int(#"135") |-> UNDEFINED(_)_EVM(Int(#"195")) Int(#"8") |-> LT_EVM(.KList) Int(#"136") |-> SWAP(Int(#"6")) Int(#"9") |-> PUSH(Int(#"1"),, Int(#"63")) Int(#"137") |-> ISZERO_EVM(.KList) Int(#"138") |-> SUB_EVM(.KList) Int(#"11") |-> JUMPI_EVM(.KList) Int(#"139") |-> PUSH(Int(#"23"),, Int(#"10987100118487637346974392327776578828054422748554854400")) Int(#"12") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"14") |-> CALLDATALOAD_EVM(.KList) Int(#"15") |-> PUSH(Int(#"29"),, Int(#"26959946667150639794667015087019630673637144422540572481103610249216")) Int(#"45") |-> SWAP(Int(#"1")) Int(#"46") |-> DIV_EVM(.KList) Int(#"47") |-> PUSH(Int(#"4"),, Int(#"4294967295")) Int(#"52") |-> AND_EVM(.KList) Int(#"53") |-> DUP(Int(#"1")) Int(#"54") |-> PUSH(Int(#"4"),, Int(#"1631983956")) Int(#"59") |-> EQ_EVM(.KList) Int(#"60") |-> PUSH(Int(#"1"),, Int(#"68")) Int(#"62") |-> JUMPI_EVM(.KList) Int(#"63") |-> JUMPDEST_EVM(.KList) Int(#"64") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"66") |-> DUP(Int(#"1")) Int(#"67") |-> REVERT_EVM(.KList) Int(#"68") |-> JUMPDEST_EVM(.KList) Int(#"69") |-> CALLVALUE_EVM(.KList) Int(#"70") |-> DUP(Int(#"1")) Int(#"71") |-> ISZERO_EVM(.KList) Int(#"72") |-> PUSH(Int(#"1"),, Int(#"79")) Int(#"74") |-> JUMPI_EVM(.KList) Int(#"75") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"77") |-> DUP(Int(#"1")) Int(#"78") |-> REVERT_EVM(.KList) Int(#"79") |-> JUMPDEST_EVM(.KList) Int(#"80") |-> POP_EVM(.KList) Int(#"81") |-> PUSH(Int(#"1"),, Int(#"86")) Int(#"83") |-> PUSH(Int(#"1"),, Int(#"88")) Int(#"85") |-> JUMP_EVM(.KList) Int(#"86") |-> JUMPDEST_EVM(.KList) Int(#"87") |-> STOP_EVM(.KList) Int(#"88") |-> JUMPDEST_EVM(.KList) Int(#"89") |-> PUSH(Int(#"1"),, Int(#"5")) Int(#"91") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"93") |-> DUP(Int(#"2")) Int(#"94") |-> SWAP(Int(#"1")) Int(#"95") |-> SSTORE_EVM(.KList) Int(#"96") |-> POP_EVM(.KList) Int(#"97") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"99") |-> ISZERO_EVM(.KList) Int(#"100") |-> ISZERO_EVM(.KList) Int(#"101") |-> PUSH(Int(#"1"),, Int(#"108")) Int(#"103") |-> JUMPI_EVM(.KList) Int(#"104") |-> PUSH(Int(#"1"),, Int(#"0")) Int(#"106") |-> DUP(Int(#"1")) Int(#"107") |-> REVERT_EVM(.KList) Int(#"108") |-> JUMPDEST_EVM(.KList) Int(#"109") |-> JUMP_EVM(.KList) Int(#"110") |-> INVALID_EVM(.KList) Int(#"111") |-> LOG(Int(#"1")) Int(#"112") |-> PUSH(Int(#"6"),, Int(#"108278179835992")) Int(#"119") |-> SHA3_EVM(.KList) Int(#"120") |-> MUL_EVM(.KList) Int(#"121") |-> UNDEFINED(_)_EVM(Int(#"221")) Int(#"122") |-> PUSH(Int(#"12"),, Int(#"14205052191959370379608719523"))   ),, <programBytes>(_:_WS(Int(#"96"),, _:_WS(Int(#"128"),, _:_WS(Int(#"96"),, _:_WS(Int(#"64"),, _:_WS(Int(#"82"),, _:_WS(Int(#"96"),, _:_WS(Int(#"4"),, _:_WS(Int(#"54"),, _:_WS(Int(#"16"),, _:_WS(Int(#"96"),, _:_WS(Int(#"63"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"53"),, _:_WS(Int(#"124"),, _:_WS(Int(#"1"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"144"),, _:_WS(Int(#"4"),, _:_WS(Int(#"99"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"22"),, _:_WS(Int(#"128"),, _:_WS(Int(#"99"),, _:_WS(Int(#"97"),, _:_WS(Int(#"70"),, _:_WS(Int(#"25"),, _:_WS(Int(#"84"),, _:_WS(Int(#"20"),, _:_WS(Int(#"96"),, _:_WS(Int(#"68"),, _:_WS(Int(#"87"),, _:_WS(Int(#"91"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"52"),, _:_WS(Int(#"128"),, _:_WS(Int(#"21"),, _:_WS(Int(#"96"),, _:_WS(Int(#"79"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"80"),, _:_WS(Int(#"96"),, _:_WS(Int(#"86"),, _:_WS(Int(#"96"),, _:_WS(Int(#"88"),, _:_WS(Int(#"86"),, _:_WS(Int(#"91"),, _:_WS(Int(#"0"),, _:_WS(Int(#"91"),, _:_WS(Int(#"96"),, _:_WS(Int(#"5"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"129"),, _:_WS(Int(#"144"),, _:_WS(Int(#"85"),, _:_WS(Int(#"80"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"21"),, _:_WS(Int(#"21"),, _:_WS(Int(#"96"),, _:_WS(Int(#"108"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"86"),, _:_WS(Int(#"254"),, _:_WS(Int(#"161"),, _:_WS(Int(#"101"),, _:_WS(Int(#"98"),, _:_WS(Int(#"122"),, _:_WS(Int(#"122"),, _:_WS(Int(#"114"),, _:_WS(Int(#"48"),, _:_WS(Int(#"88"),, _:_WS(Int(#"32"),, _:_WS(Int(#"2"),, _:_WS(Int(#"221"),, _:_WS(Int(#"107"),, _:_WS(Int(#"45"),, _:_WS(Int(#"230"),, _:_WS(Int(#"36"),, _:_WS(Int(#"206"),, _:_WS(Int(#"86"),, _:_WS(Int(#"241"),, _:_WS(Int(#"24"),, _:_WS(Int(#"32"),, _:_WS(Int(#"181"),, _:_WS(Int(#"184"),, _:_WS(Int(#"0"),, _:_WS(Int(#"163"),, _:_WS(Int(#"195"),, _:_WS(Int(#"149"),, _:_WS(Int(#"21"),, _:_WS(Int(#"3"),, _:_WS(Int(#"118"),, _:_WS(Int(#"114"),, _:_WS(Int(#"181"),, _:_WS(Int(#"238"),, _:_WS(Int(#"247"),, _:_WS(Int(#"109"),, _:_WS(Int(#"110"),, _:_WS(Int(#"134"),, _:_WS(Int(#"142"),, _:_WS(Int(#"94"),, _:_WS(Int(#"120"),, _:_WS(Int(#"59"),, _:_WS(Int(#"101"),, _:_WS(Int(#"0"),, _:_WS(Int(#"41"),, .WordStack_EVM-DATA(.KList)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),, <id>(#CONTRACT_ID_VERIFICATION(.KList)),, <caller>(MSG_SENDER_2917:Int),, <callData>(_:_WS(Int(#"97"),, _:_WS(Int(#"70"),, _:_WS(Int(#"25"),, _:_WS(Int(#"84"),, .WordStack_EVM-DATA(.KList)))))),, <callValue>(Int(#"0")),, <wordStack>(_:_WS(Int(#"86"),, _:_WS(Int(#"1631983956"),, .WordStack_EVM-DATA(.KList)))),, <localMem>(Int(#"64") |-> Int(#"0") Int(#"65") |-> Int(#"0") Int(#"66") |-> Int(#"0") Int(#"67") |-> Int(#"0") Int(#"68") |-> Int(#"0") Int(#"69") |-> Int(#"0") Int(#"70") |-> Int(#"0") Int(#"71") |-> Int(#"0") Int(#"72") |-> Int(#"0") Int(#"73") |-> Int(#"0") Int(#"74") |-> Int(#"0") Int(#"75") |-> Int(#"0") Int(#"76") |-> Int(#"0") Int(#"77") |-> Int(#"0") Int(#"78") |-> Int(#"0") Int(#"79") |-> Int(#"0") Int(#"80") |-> Int(#"0") Int(#"81") |-> Int(#"0") Int(#"82") |-> Int(#"0") Int(#"83") |-> Int(#"0") Int(#"84") |-> Int(#"0") Int(#"85") |-> Int(#"0") Int(#"86") |-> Int(#"0") Int(#"87") |-> Int(#"0") Int(#"88") |-> Int(#"0") Int(#"89") |-> Int(#"0") Int(#"90") |-> Int(#"0") Int(#"91") |-> Int(#"0") Int(#"92") |-> Int(#"0") Int(#"93") |-> Int(#"0") Int(#"94") |-> Int(#"0") Int(#"95") |-> Int(#"128")   ),, <pc>(Int(#"107")),, <gas>(#gas(INITGAS_2919:Int,, _+Int_(Csstore(BYZANTIUM_EVM(.KList),, Int(#"5"),, select(_687_2962:Map,, Int(#"0")),, select(_688_2963:Map,, Int(#"0"))),, Int(#"157")),, Int(#"9"))),, <memoryUsed>(Int(#"3")),, <previousGas>(#gas(INITGAS_2919:Int,, _+Int_(Csstore(BYZANTIUM_EVM(.KList),, Int(#"5"),, select(_687_2962:Map,, Int(#"0")),, select(_688_2963:Map,, Int(#"0"))),, Int(#"157")),, Int(#"9"))),, <static>(Bool(#"false")),, <callDepth>(CD_2923:Int)),, <substate>(<selfDestruct>(_665_2940:Set),, <log>(_666_2941:List),, <refund>(_+Int_(_667_2942:Int,, Rsstore(BYZANTIUM_EVM(.KList),, Int(#"5"),, select(_687_2962:Map,, Int(#"0")),, select(_688_2963:Map,, Int(#"0")))))),, <gasPrice>(_669_2944:Int),, <origin>(_670_2945:Int),, <previousHash>(_671_2946:Int),, <ommersHash>(_672_2947:Int),, <coinbase>(_673_2948:Int),, <stateRoot>(_675_2950:Int),, <transactionsRoot>(_676_2951:Int),, <receiptsRoot>(_677_2952:Int),, <logsBloom>(_678_2953:WordStack),, <difficulty>(_679_2954:Int),, <number>(BLOCK_NUM_2921:Int),, <gasLimit>(_680_2955:Int),, <gasUsed>(_681_2956:Int),, <timestamp>(NOW_2924:Int),, <extraData>(_682_2957:WordStack),, <mixHash>(_683_2958:Int),, <blockNonce>(_684_2959:Int),, <ommerBlockHeaders>(_685_2960:JSON),, <blockhash>(BLOCK_HASHES_2922:List)),, <network>(<activeAccounts>(#CALLEE_ID_VERIFICATION(.KList) Int(#"1") #CONTRACT_ID_VERIFICATION(.KList)_686_2961:Set),, <accounts>(<acctID>(#CONTRACT_ID_VERIFICATION(.KList)) |-> <account>(<acctID>(#CONTRACT_ID_VERIFICATION(.KList)),, <balance>(CONTRACT_BAL_2972:Int),, <code>(_:_WS(Int(#"96"),, _:_WS(Int(#"128"),, _:_WS(Int(#"96"),, _:_WS(Int(#"64"),, _:_WS(Int(#"82"),, _:_WS(Int(#"96"),, _:_WS(Int(#"4"),, _:_WS(Int(#"54"),, _:_WS(Int(#"16"),, _:_WS(Int(#"96"),, _:_WS(Int(#"63"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"53"),, _:_WS(Int(#"124"),, _:_WS(Int(#"1"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"0"),, _:_WS(Int(#"144"),, _:_WS(Int(#"4"),, _:_WS(Int(#"99"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"255"),, _:_WS(Int(#"22"),, _:_WS(Int(#"128"),, _:_WS(Int(#"99"),, _:_WS(Int(#"97"),, _:_WS(Int(#"70"),, _:_WS(Int(#"25"),, _:_WS(Int(#"84"),, _:_WS(Int(#"20"),, _:_WS(Int(#"96"),, _:_WS(Int(#"68"),, _:_WS(Int(#"87"),, _:_WS(Int(#"91"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"52"),, _:_WS(Int(#"128"),, _:_WS(Int(#"21"),, _:_WS(Int(#"96"),, _:_WS(Int(#"79"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"80"),, _:_WS(Int(#"96"),, _:_WS(Int(#"86"),, _:_WS(Int(#"96"),, _:_WS(Int(#"88"),, _:_WS(Int(#"86"),, _:_WS(Int(#"91"),, _:_WS(Int(#"0"),, _:_WS(Int(#"91"),, _:_WS(Int(#"96"),, _:_WS(Int(#"5"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"129"),, _:_WS(Int(#"144"),, _:_WS(Int(#"85"),, _:_WS(Int(#"80"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"21"),, _:_WS(Int(#"21"),, _:_WS(Int(#"96"),, _:_WS(Int(#"108"),, _:_WS(Int(#"87"),, _:_WS(Int(#"96"),, _:_WS(Int(#"0"),, _:_WS(Int(#"128"),, _:_WS(Int(#"253"),, _:_WS(Int(#"91"),, _:_WS(Int(#"86"),, _:_WS(Int(#"254"),, _:_WS(Int(#"161"),, _:_WS(Int(#"101"),, _:_WS(Int(#"98"),, _:_WS(Int(#"122"),, _:_WS(Int(#"122"),, _:_WS(Int(#"114"),, _:_WS(Int(#"48"),, _:_WS(Int(#"88"),, _:_WS(Int(#"32"),, _:_WS(Int(#"2"),, _:_WS(Int(#"221"),, _:_WS(Int(#"107"),, _:_WS(Int(#"45"),, _:_WS(Int(#"230"),, _:_WS(Int(#"36"),, _:_WS(Int(#"206"),, _:_WS(Int(#"86"),, _:_WS(Int(#"241"),, _:_WS(Int(#"24"),, _:_WS(Int(#"32"),, _:_WS(Int(#"181"),, _:_WS(Int(#"184"),, _:_WS(Int(#"0"),, _:_WS(Int(#"163"),, _:_WS(Int(#"195"),, _:_WS(Int(#"149"),, _:_WS(Int(#"21"),, _:_WS(Int(#"3"),, _:_WS(Int(#"118"),, _:_WS(Int(#"114"),, _:_WS(Int(#"181"),, _:_WS(Int(#"238"),, _:_WS(Int(#"247"),, _:_WS(Int(#"109"),, _:_WS(Int(#"110"),, _:_WS(Int(#"134"),, _:_WS(Int(#"142"),, _:_WS(Int(#"94"),, _:_WS(Int(#"120"),, _:_WS(Int(#"59"),, _:_WS(Int(#"101"),, _:_WS(Int(#"0"),, _:_WS(Int(#"41"),, .WordStack_EVM-DATA(.KList)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),, <storage>(store(_687_2962:Map,, Int(#"0"),, Int(#"5"))),, <origStorage>(_688_2963:Map),, <nonce>(_689_2964:Int)) <acctID>(#CALLEE_ID_VERIFICATION(.KList)) |-> <account>(<acctID>(#CALLEE_ID_VERIFICATION(.KList)),, <balance>(CALLEE_BAL_2918:Int),, <code>(_690_2965:AccountCode),, <storage>(_691_2966:Map),, <origStorage>(_692_2967:Map),, <nonce>(_693_2968:Int)) <acctID>(Int(#"1")) |-> <account>(<acctID>(Int(#"1")),, <balance>(Int(#"0")),, <code>(.WordStack_EVM-DATA(.KList)),, <storage>(.Map),, <origStorage>(.Map),, <nonce>(Int(#"0")))   DotVar1_2920:Map),, <txOrder>(_694_2969:List),, <txPending>(_695_2970:List),, <messages>(_696_2971:Map))))
/\
ConjunctiveFormula(
  init equalities:
    _==K_(_<=Int__INT-COMMON(BLOCK_NUM_2921:Int,, Int(#"340282366920938463463374607431768211455")),, Bool(#"true"))
    _==K_(_<=Int__INT-COMMON(Int(#"0"),, BLOCK_NUM_2921:Int),, Bool(#"true"))
    _==K_(_<=Int__INT-COMMON(Int(#"0"),, CD_2923:Int),, Bool(#"true"))
    _==K_(_<=Int__INT-COMMON(Int(#"0"),, CONTRACT_BAL_2972:Int),, Bool(#"true"))
    _==K_(_<=Int__INT-COMMON(Int(#"0"),, MSG_SENDER_2917:Int),, Bool(#"true"))
    _==K_(_<=Int__INT-COMMON(Int(#"0"),, NOW_2924:Int),, Bool(#"true"))
    _==K_(_<Int__INT-COMMON(CD_2923:Int,, Int(#"1024")),, Bool(#"true"))
    _==K_(_<Int__INT-COMMON(CONTRACT_BAL_2972:Int,, Int(#"115792089237316195423570985008687907853269984665640564039457584007913129639936")),, Bool(#"true"))
    _==K_(_<Int__INT-COMMON(Int(#"0"),, #CALLEE_ID_VERIFICATION(.KList)),, Bool(#"true"))
    _==K_(_<Int__INT-COMMON(Int(#"0"),, #CONTRACT_ID_VERIFICATION(.KList)),, Bool(#"true"))
    _==K_(_<Int__INT-COMMON(MSG_SENDER_2917:Int,, Int(#"1461501637330902918203684832716283019655932542976")),, Bool(#"true"))
    _==K_(_<Int__INT-COMMON(NOW_2924:Int,, Int(#"115792089237316195423570985008687907853269984665640564039457584007913129639936")),, Bool(#"true"))
)


SPEC FAILED: /home/sbugrara/kevm-verify-benchmarks/0-storagevar03-0.5.0/generated/fn-execute-spec.k Location(11,5,123,17)
==================================
Success execution paths: 0
Failed execution paths: 1
Longest path: 661 steps
Stats for each phase, time, used memory, implicit main GC time percentage:
Total                 :   54.793 s,	 1119 MB, gc:  0.900 %
  Parsing             :   49.317 s,	  363 MB, gc:  1.000 %
  Init                :    0.871 s,	  558 MB, gc:  0.000 %
  Execution           :    4.605 s,	 1119 MB, gc:  0.000 %

Init+Execution time:       5.475 s
  query build time                 :    0.165 s,      #        157
  Z3 Function rule implication time:    0.124 s,      #         10
      sat           :       10
    query build failures: 3
  Z3 Final implication time        :    0.012 s,      #          1
      sat           :       1
  Z3 Spec rule constraint time     :    1.841 s,      #        143
      sat           :       143

  Time and top-level event counts:
  resolveFunctionAndAnywhere time  :    0.496 s,      #      16348
    evaluateFunction time            :    0.465 s,      #       2424
      builtin evaluation               :           ,      #        339
      function rule                    :           ,      #        337
      sort predicate                   :           ,      #        229
      no rule applicable               :           ,      #       1515
      no function rules                :           ,      #          4
    applyAnywhereRules time          :    0.003 s,      #       3998
      no anywhere rules                :           ,      #       3998
    remaining time & # cached        :    0.028 s,      #       9926
  impliesSMT time                  :    0.161 s,      #         14

  Recursive event counts:
  resolveFunctionAndAnywhere time  :           ,      #       9227
    evaluateFunction time            :           ,      #       5334
      builtin evaluation               :           ,      #       2918
      function rule                    :           ,      #       2128
      sort predicate                   :           ,      #         52
      no rule applicable               :           ,      #        223
      no function rules                :           ,      #          3
    applyAnywhereRules time          :           ,      #        602
      no anywhere rules                :           ,      #        602
    # cached                         :           ,      #       3291

Max memory : 7282 MB
==================================

false
[Warning] Internal: execution phase: BuiltinMap can be translated to Z3 only through fresh var . Please re-run with the --debug-z3 flag. Search the logs starting with 'Z3 warning' to see the Z3 implication that generated the warning. (BuiltinMap can be translated to Z3 only through fresh var)
[Warning] Internal: init phase: missing SMTLib translation for #isBuf . Please re-run with the --debug-z3 flag. Search the logs starting with 'Z3 warning' to see the Z3 implication that generated the warning. (missing SMTLib translation for #isBuf)
../resources/kprove.mak:150: recipe for target 'generated/fn-execute-spec.k.test' failed
make: *** [generated/fn-execute-spec.k.test] Error 1
