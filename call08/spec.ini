;root eDSL rule from all other eDSL rules extend
[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(#CALLEE_ID) SetItem(1) _:Set
accounts:
;contract
balance: _
storage: _
origstorage: _
nonce: _

callee_bal: CALLEE_BAL
callee_storage: _
callee_origstorage: _
callee_nonce: _
callee_code: _

;origin
requires:
    
    andBool #rangeUInt(256, CALLEE_BAL)
ensures:
attribute:

[execute]
k: (#execute => #halt) ~> _
output: _ => _
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("execute", #bool(CONDITION_SB), #address(DESTINATION))
callValue: 0
wordStack: .WordStack => _
localMem: .Map => _
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _
coinbase: _ => _
+requires:
    andBool #range(0 <= CD < 1023)
    andBool #rangeAddress(MSG_SENDER)
    andBool #rangeAddress(DESTINATION)
    andBool DESTINATION ==K #CALLEE_ID


[execute-success]
statusCode: _ => EVMC_SUCCESS
+requires:
            andBool CONDITION_SB ==Int 1
+ensures:
            andBool #callInvoked

;this fails, but
[execute-failure]
statusCode: _ => EVMC_REVERT
+requires:
    andBool CONDITION_SB ==Int 0


[pgm]
compiler: "Solidity"

;call00.sol
contract_code: "0x608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063b9ddc7ea146044575b600080fd5b348015604f57600080fd5b50609b60048036036040811015606457600080fd5b81019080803515159060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505060b5565b604051808215151515815260200191505060405180910390f35b600082151560c257600080fd5b60008090506000806000806000875af19050809150509291505056fea165627a7a72305820debcee552c3639a7329a95be25c5c77e2a74d2ea9349843c0dddf469c89142f50029"