;root eDSL rule from all other eDSL rules extend
[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(1) _:Set
accounts:
;contract
contract_bal: CONTRACT_BAL
contract_storage: _
contract_origstorage: _
contract_nonce: _
;origin
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
ensures:
attribute:


;eDSL rule for external contract function called getx
[execute]
k: (#execute => #halt) ~> _
output: _ => _
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("execute", (
                #array(#uint8(_), SIGV_LEN, _),
                #array(#bytes32(_), SIGR_LEN, _) ))
callValue: 0
wordStack: .WordStack => _
localMem: .Map => _
contract_storage: S
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _
coinbase: _ => _
+requires:  andBool THRESHOLD ==Int select(S, #hashedLocation({COMPILER}, {THRESHOLD_SLOT}, .IntList))
            andBool #rangeUInt(256, THRESHOLD)

            andBool #range(0 <= CD < 1024)
            andBool #rangeAddress(MSG_SENDER)
            andBool #rangeUInt(256, SIGR_LEN)

[execute-sigrlencheck]
statusCode: _ => EVMC_REVERT
+requires: andBool SIGR_LEN =/=Int THRESHOLD

[pgm]
compiler: "Solidity"

; bytes32 constant EIP712DOMAINTYPE_HASH = 0xd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac56472;
eip7127domaintypehash_slot: 0
; bytes32 constant NAME_HASH = 0xb7a0bfa1b79f2443f4d73ebb9259cddbcd510b18be6fc4da7d1aa7b1786e73e6;
name_hash_slot: 1
; bytes32 constant VERSION_HASH = 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6;
version_hash_slot: 2
; bytes32 constant TXTYPE_HASH = 0x3ee892349ae4bbe61dce18f95115b5dc02daf49204cc602458cd4c1f540d56d7;
txtype_hash_slot: 3
; bytes32 constant SALT = 0x251543af6a222378665a76fe38dbceae4871a070b7fdaf5c6c30cf758dc33cc0;
salt_slot: 4
; uint public nonce;
nonce: 5
; uint public threshold;
threshold_slot: 6
; mapping (address => bool) isOwner;
is_owner_slot: 7
; address[] public ownersArr;
owners_arr_slot: 8
; bytes32 DOMAIN_SEPARATOR;
domain_separator_slot: 9

contract_code: "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806342cde4e81461006757806347b58efe14610092578063aa5df9e2146100f9578063affed0e014610166575b600080fd5b34801561007357600080fd5b5061007c610191565b6040518082815260200191505060405180910390f35b34801561009e57600080fd5b506100e3600480360381019080803590602001908201803590602001919091929391929390803590602001908201803590602001919091929391929390505050610197565b6040518082815260200191505060405180910390f35b34801561010557600080fd5b50610124600480360381019080803590602001909291905050506101b8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017257600080fd5b5061017b6101f6565b6040518082815260200191505060405180910390f35b60015481565b6000600154838390501415156101ac57600080fd5b60059050949350505050565b6003818154811015156101c757fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600054815600a165627a7a7230582035c7ca16bea47445d9202f5f334c85c5ab2008bb2ada9c02357e9c3e26bf3b710029"