;root eDSL rule from all other eDSL rules extend
[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(1) _:Set
accounts:
;contract
contract_bal: CONTRACT_BAL
contract_storage: _
contract_origstorage: _
contract_nonce: _
;origin
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
ensures:
attribute:


;eDSL rule for external contract function called foo
[get-length]
k: (#execute => #halt) ~> _
statusCode: _ => EVMC_SUCCESS
output: _ => _
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("len", (#array(#uint256(_), ARR_LEN, ARR)))
callValue: _
wordStack: .WordStack => _
localMem: .IMap => _
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _ => _
coinbase: _ => _
+requires:  andBool #range(0 <= CD < 1023)
            andBool #rangeAddress(MSG_SENDER)
            andBool #rangeUInt(256, ARR_LEN)


[pgm]
compiler: "Solidity"

contract_code: "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063ececb20a14602d575b600080fd5b609e60048036036020811015604157600080fd5b8101908080359060200190640100000000811115605d57600080fd5b820183602082011115606e57600080fd5b80359060200191846020830284011164010000000083111715608f57600080fd5b909192939192939050505060b4565b6040518082815260200191505060405180910390f35b60008282905090509291505056fea165627a7a7230582081742de4e7b87f40b59bcae8bad14b5871a54557477268366ba506a966a0c5560029"