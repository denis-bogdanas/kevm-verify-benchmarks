;root eDSL rule from all other eDSL rules extend
[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(1) _:Set
accounts:
;contract
contract_bal: CONTRACT_BAL
contract_storage: _
contract_origstorage: _
contract_nonce: _
;callee
callee_bal: CALLEE_BAL
callee_storage: _
callee_origstorage: _
callee_nonce: _
callee_code: _
;origin
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
ensures:
attribute:


;eDSL rule for external contract function called get5
[get5]
k: (#execute => #halt) ~> _
statusCode: _ => EVMC_SUCCESS
output: _ => #encodeArgs(#uint256(E1))
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("get5",
                            #staticarray1(#uint256(_), 3,
                                          #uint256(E0), #uint256(E1), #uint256(E2)))
callValue: 0
wordStack: .WordStack => _
localMem: .Map => _
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _
coinbase: _ => _
+requires:  andBool #range(0 <= CD < 1024)
            andBool #rangeAddress(MSG_SENDER)
            andBool #rangeUInt(256, E0)
            andBool #rangeUInt(256, E1)
            andBool #rangeUInt(256, E2)


[pgm]
compiler: "Solidity"

contract_code: "0x608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063a7f83a75146044575b600080fd5b348015604f57600080fd5b50606c600480360381019080806060019091929192905050506082565b6040518082815260200191505060405180910390f35b6000816001600381101515609257fe5b602002013590509190505600a165627a7a723058207b8f148489367a4619ed52cee4a6d95c84da246e6e41e1534f4c2d2f0c629ee40029"