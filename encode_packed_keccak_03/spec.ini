;root eDSL rule from all other eDSL rules extend
[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(1) _:Set
accounts:
;contract
contract_bal: CONTRACT_BAL
contract_storage: M
contract_origstorage: _
contract_nonce: _
;callee
callee_bal: CALLEE_BAL
callee_storage: _
callee_origstorage: _
callee_nonce: _
callee_code: _
;origin
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
ensures:
attribute:


;eDSL rule for external contract function called getkeccak
[get]
k: (#execute => #halt) ~> _
statusCode: _ => EVMC_SUCCESS
output: _ => #encodeArgs(#bytes32(keccak(25 : 1 : #encodeArgs(#bytes32(STORAGE0), #uint256(ARG0)))))
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("get", #bytes32(ARG0) )
callValue: 0
wordStack: .WordStack => _
localMem: .Map => _
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _
coinbase: _ => _
+requires:
            andBool #range(0 <= CD < 1024)
            andBool #rangeAddress(MSG_SENDER)
            andBool #rangeUInt(256, ARG0)

            andBool STORAGE0 ==Int select(M, #hashedLocation({COMPILER}, 0, .IntList))
            andBool #rangeBytes(32, STORAGE0)

[pgm]
compiler: "Solidity"

contract_code: "0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638eaa6ac014610051578063e5f6c1971461009e575b600080fd5b34801561005d57600080fd5b5061008060048036038101908080356000191690602001909291905050506100d1565b60405180826000191660001916815260200191505060405180910390f35b3480156100aa57600080fd5b506100b361019d565b60405180826000191660001916815260200191505060405180910390f35b600080548260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183600019166000191681526020018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831015156101695780518252602082019150602081019050602083039250610144565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b600054815600a165627a7a723058209bca70c5c680ffb2571c7daa2725569be833ab13efcbaf21225b30efe92975730029"