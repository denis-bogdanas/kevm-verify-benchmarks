;root eDSL rule from all other eDSL rules extend
[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(1) _:Set
accounts:
;contract
contract_bal: CONTRACT_BAL
contract_storage: _
contract_origstorage: _
contract_nonce: _
;origin
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
ensures:
attribute:


;eDSL rule for external contract function called getx
[execute]
k: (#execute => #halt) ~> _
output: _ => _
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("execute", (
                #array(#uint8(_), SIGV_LEN, SIGV),
                #array(#bytes32(_), SIGR_LEN, SIGR),
                #array(#bytes32(_), SIGS_LEN, SIGS),
                #address(DESTINATION),
                #uint256(VALUE),
                #bytes(DATA),
                #address(EXECUTOR),
                #uint256(GAS_LIMIT) ))
callValue: 0
wordStack: .WordStack => _
localMem: .Map => _
contract_storage: S
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _
coinbase: _ => _
+requires:  andBool THRESHOLD ==Int select(S, #hashedLocation({COMPILER}, {THRESHOLD_SLOT}, .IntList))
            andBool #rangeUInt(256, THRESHOLD)

            andBool #range(0 <= CD < 1024)
            andBool #rangeAddress(MSG_SENDER)
            andBool #rangeUInt(256, SIGV_LEN)
            andBool #rangeUInt(256, SIGR_LEN)
            andBool #rangeUInt(256, SIGS_LEN)
            andBool #rangeAddress(DESTINATION)
            andBool #rangeUInt(256, VALUE)
            andBool #rangeUInt(256, DATA_LEN)
            andBool #rangeAddress(EXECUTOR)
            andBool #rangeUInt(256, GAS_LIMIT)

[execute-sigrlencheck]
statusCode: _ => EVMC_REVERT
+requires: andBool SIGR_LEN =/=Int THRESHOLD

[pgm]
compiler: "Solidity"
; bytes32 constant EIP712DOMAINTYPE_HASH = 0xd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac56472;
eip7127domaintypehash_slot: 0
; bytes32 constant NAME_HASH = 0xb7a0bfa1b79f2443f4d73ebb9259cddbcd510b18be6fc4da7d1aa7b1786e73e6;
name_hash_slot: 1
; bytes32 constant VERSION_HASH = 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6;
version_hash_slot: 2
; bytes32 constant TXTYPE_HASH = 0x3ee892349ae4bbe61dce18f95115b5dc02daf49204cc602458cd4c1f540d56d7;
txtype_hash_slot: 3
; bytes32 constant SALT = 0x251543af6a222378665a76fe38dbceae4871a070b7fdaf5c6c30cf758dc33cc0;
salt_slot: 4
; uint public nonce;
nonce: 5
; uint public threshold;
threshold_slot: 6
; mapping (address => bool) isOwner;
is_owner_slot: 7
; address[] public ownersArr;
owners_arr_slot: 8
; bytes32 DOMAIN_SEPARATOR;
domain_separator_slot: 9

contract_code: "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806342cde4e814610067578063a0ab965314610092578063aa5df9e21461017d578063affed0e0146101ea575b600080fd5b34801561007357600080fd5b5061007c610215565b6040518082815260200191505060405180910390f35b34801561009e57600080fd5b50610167600480360381019080803590602001908201803590602001919091929391929390803590602001908201803590602001919091929391929390803590602001908201803590602001919091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061021b565b6040518082815260200191505060405180910390f35b34801561018957600080fd5b506101a860048036038101908080359060200190929190505050610244565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f657600080fd5b506101ff610282565b6040518082815260200191505060405180910390f35b60015481565b60006001548b8b905014151561023057600080fd5b600590509c9b505050505050505050505050565b60038181548110151561025357fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600054815600a165627a7a723058201df51c6f0f734cce163b4079db07ce10d12c94b71ac42fea2f73f149a5eb62770029"