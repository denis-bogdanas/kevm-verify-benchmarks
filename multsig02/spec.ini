;root eDSL rule from all other eDSL rules extend
[root]
code: {CONTRACT_CODE}
comment:
callDepth: CD
; account 1 has to be active, otherwise there will be branching on <k>: #accountNonexistent(1)
activeAccounts: SetItem(#CONTRACT_ID) SetItem(1) _:Set
accounts:
;contract
contract_bal: CONTRACT_BAL
contract_storage: _
contract_origstorage: _
contract_nonce: _
;origin
requires:
    andBool #rangeUInt(256, CONTRACT_BAL)
ensures:
attribute:


;eDSL rule for external contract function called getx
[execute]
k: (#execute => #halt) ~> _
output: _ => _
log: _
callStack: _
this: #CONTRACT_ID
msg_sender: MSG_SENDER
callData:  #abiCallData("execute", #array(#uint8(_), SIGV_LEN, _))
callValue: 0
wordStack: .WordStack => _
localMem: .Map => _
contract_storage: S
pc: 0 => _
gas: #gas(INITGAS, 0, 0) => _
memoryUsed: 0 => _
refund: _
coinbase: _ => _
+requires:  andBool THRESHOLD ==Int select(S, #hashedLocation({COMPILER}, {THRESHOLD_SLOT}, .IntList))
            andBool #rangeUInt(256, THRESHOLD)

            andBool #range(0 <= CD < 1024)
            andBool #rangeAddress(MSG_SENDER)
            andBool #rangeUInt(256, SIGR_LEN)

[execute-sigrlencheck]
statusCode: _ => EVMC_REVERT
+requires: andBool SIGR_LEN =/=Int THRESHOLD

[pgm]
compiler: "Solidity"

threshold_slot: 0

contract_code: "0x6080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806342cde4e814604e5780638af7c649146076575b600080fd5b348015605957600080fd5b50606060c2565b6040518082815260200191505060405180910390f35b348015608157600080fd5b5060ac60048036038101908080359060200190820180359060200191909192939192939050505060c8565b6040518082815260200191505060405180910390f35b60005481565b600080548383905014151560db57600080fd5b60059050929150505600a165627a7a723058203565f7d82691714e912c285f18c087dee993d1ff62adef611e08f472ad297db40029"